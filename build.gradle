plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.6'
	id 'io.spring.dependency-management' version '1.1.0'
	id "com.netflix.dgs.codegen" version "5.6.3"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation(platform('com.netflix.graphql.dgs:graphql-dgs-platform-dependencies:5.4.3'))
    implementation "com.netflix.graphql.dgs:graphql-dgs-spring-boot-starter"
	implementation "com.netflix.graphql.dgs:graphql-dgs-extended-scalars"
	implementation 'net.datafaker:datafaker:1.7.0'
// https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
	implementation 'org.apache.commons:commons-lang3:3.12.0'


}

tasks.named('test') {
	useJUnitPlatform()
}
generateJava{
   schemaPaths = ["${projectDir}/src/main/resources/schema"] // List of directories containing schema files
   packageName = 'com.example.graphql.generated' // The package name to use to generate sources
   generateClient = true // Enable generating the type safe query API
}

dependencyManagement {
	imports {
		mavenBom 'com.netflix.graphql.dgs:graphql-dgs-platform-dependencies:latest.release'
	}
}